"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.buildGetValue = buildGetValue;
exports.getValue = exports.fieldTypeCleaners = exports.isEmptyArray = exports.rejectEmpty = exports.isEmptyArr = exports.isEmptyObject = exports.isEmptyString = void 0;

var _trim2 = _interopRequireDefault(require("lodash/fp/trim"));

var _reject2 = _interopRequireDefault(require("lodash/fp/reject"));

var _pickBy2 = _interopRequireDefault(require("lodash/fp/pickBy"));

var _overSome2 = _interopRequireDefault(require("lodash/fp/overSome"));

var _overEvery2 = _interopRequireDefault(require("lodash/fp/overEvery"));

var _noop2 = _interopRequireDefault(require("lodash/fp/noop"));

var _isUndefined2 = _interopRequireDefault(require("lodash/fp/isUndefined"));

var _isString2 = _interopRequireDefault(require("lodash/fp/isString"));

var _isPlainObject2 = _interopRequireDefault(require("lodash/fp/isPlainObject"));

var _isNull2 = _interopRequireDefault(require("lodash/fp/isNull"));

var _isFunction2 = _interopRequireDefault(require("lodash/fp/isFunction"));

var _isEmpty2 = _interopRequireDefault(require("lodash/fp/isEmpty"));

var _identity2 = _interopRequireDefault(require("lodash/fp/identity"));

var _isDate2 = _interopRequireDefault(require("lodash/fp/isDate"));

var _isBoolean2 = _interopRequireDefault(require("lodash/fp/isBoolean"));

var _isArray2 = _interopRequireDefault(require("lodash/fp/isArray"));

var _flow2 = _interopRequireDefault(require("lodash/fp/flow"));

var _defaults2 = _interopRequireDefault(require("lodash/fp/defaults"));

var _compact2 = _interopRequireDefault(require("lodash/fp/compact"));

var _clean = require("./clean");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var isEmptyString = (0, _overEvery2.default)([_isString2.default, (0, _flow2.default)(_trim2.default, _isEmpty2.default)]);
exports.isEmptyString = isEmptyString;
var isEmptyObject = (0, _overEvery2.default)([_isPlainObject2.default, (0, _flow2.default)((0, _pickBy2.default)(_identity2.default), _isEmpty2.default)]);
exports.isEmptyObject = isEmptyObject;
var isEmptyArr = (0, _overEvery2.default)([_isArray2.default, (0, _flow2.default)(_compact2.default, _isEmpty2.default)]);
exports.isEmptyArr = isEmptyArr;
var rejectEmpty = (0, _reject2.default)((0, _overSome2.default)([isEmptyString, isEmptyObject, isEmptyArr])); // Only does one level of recursion. :-(

exports.rejectEmpty = rejectEmpty;
var isEmptyArray = (0, _overEvery2.default)([_isArray2.default, (0, _flow2.default)(_compact2.default, rejectEmpty, _isEmpty2.default)]);
exports.isEmptyArray = isEmptyArray;
var fieldTypeCleaners = {
  isArray: _clean.cleanArray,
  isBoolean: _identity2.default,
  isDate: _identity2.default,
  isFunction: _noop2.default,
  isNull: _identity2.default,
  isPlainObject: _clean.cleanObject,
  isString: _clean.cleanString,
  isUndefined: _noop2.default
};
exports.fieldTypeCleaners = fieldTypeCleaners;

function buildGetValue() {
  var mungeWithOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var mungeWith = (0, _defaults2.default)(fieldTypeCleaners, mungeWithOptions);
  return function getVal(node, clean) {
    if ((0, _isUndefined2.default)(node)) return mungeWith.isUndefined(node);
    if ((0, _isFunction2.default)(node)) return mungeWith.isFunction(node);
    if ((0, _isBoolean2.default)(node)) return mungeWith.isBoolean(node);
    if ((0, _isNull2.default)(node)) return mungeWith.isNull(node);
    if ((0, _isString2.default)(node)) return mungeWith.isString(node);
    if ((0, _isDate2.default)(node)) return mungeWith.isDate(node);
    if ((0, _isArray2.default)(node)) return mungeWith.isArray(node, clean);
    if ((0, _isPlainObject2.default)(node)) return mungeWith.isPlainObject(node, clean);
    return node;
  };
}

var getValue = buildGetValue();
exports.getValue = getValue;